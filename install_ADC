#!/bin/bash

########################################################################
#                              install_ADC
#-----------------------------------------------------------------------
#               A simple script to install the ADC program
########################################################################

#-----------------------------------------------------------------------
# Check to see if the operating system is Darwin. If so, then some
# things later on will have to be changed/adapted.
#-----------------------------------------------------------------------
chk=`echo $OSTYPE | grep darwin`
if [ -z $chk ]; then
    isdarwin='F'
else
    isdarwin='T'
fi

#-----------------------------------------------------------------------
# Read the target name. If the target is not given, then perform a
# clean install of all programs
#-----------------------------------------------------------------------
target=$1

#-----------------------------------------------------------------------
# $args: list of variables to be passed to make
#-----------------------------------------------------------------------
args=""

#-----------------------------------------------------------------------
# Get variables from ADC.CONFIG if it exists
#-----------------------------------------------------------------------
if [ -f "ADC.CONFIG" ]; then
    blasflag=`cat ADC.CONFIG | grep LIB_BLAS | sed 's/.*=//g'`
    lapackflag=`cat ADC.CONFIG | grep LIB_LAPACK | sed 's/.*=//g'`
fi

#-----------------------------------------------------------------------
# Hard-wiring of blas/lapack libraries for testing purposes
#-----------------------------------------------------------------------
# MKL, sequential
#blasflag='-mkl=sequential'
#lapackflag='-mkl=sequential'

# MKL, parallel
#blasflag='-mkl'
#lapackflag='-mkl'

# BLAS/LAPACK
#blasflag='-lblas'
#lapackflag='-llapack'

#-----------------------------------------------------------------------
# Determine BLAS and LAPACK compiler flags
#-----------------------------------------------------------------------
if [ -z $blasflag ]; then
    echo 
    read -p "Please enter the BLAS linking flag:  " blasflag
fi

if [ -z $lapackflag ]; then
    echo
    read -p "Please enter the LAPACK linking flag:  " lapackflag
fi
echo

args+=" "LIB_BLAS=$blasflag
args+=" "LIB_LAPACK=$lapackflag

#-----------------------------------------------------------------------
# Write variables to ADC.CONFIG for future use
#-----------------------------------------------------------------------
if [ -f "ADC.CONFIG" ]; then
    rm ADC.CONFIG
fi

echo "LIB_BLAS=$blasflag" >>ADC.CONFIG
echo "LIB_LAPACK=$lapackflag" >>ADC.CONFIG

#-----------------------------------------------------------------------
# Compilation of external libraries
#-----------------------------------------------------------------------
if [ "$target" == 'adc' ] || [ -z $target ]; then
    # Numgrid
    if [ -f lib/libnumgrid.so ]; then
	rm lib/libnumgrid.so
    fi
    cd source/numgrid
    gfortran -c numgrid.f90
    g++ -fPIC -c *.cpp
    if [ "$isdarwin" == 'T' ]; then
	g++ -shared -Wl,-install_name,libnumgrid.so -o libnumgrid.so *.o
    else
	g++ -shared -Wl,-soname,libnumgrid.so -o libnumgrid.so *.o
    fi	
    mv libnumgrid.so ../../lib
    mv numgrid.mod ../../
    rm *.o *.mod
    cd ../../
fi

#-----------------------------------------------------------------------
# Calls to make
#-----------------------------------------------------------------------
list=(clean_all adc stieltjes_ap mcspline numhess rixsplt auto2spec \
      fdiag)

if [ -z $target ]; then
    for T in "${list[@]}"; do
	make $T $args
    done
else
    make $target $args
fi

#-----------------------------------------------------------------------
# Compile the documentation
#-----------------------------------------------------------------------
echo
echo "Compiling the documentation..."

cd doc
pdflatex input >/dev/null
rm *.aux *.log
cd ..

#-----------------------------------------------------------------------
# Set the ADC_DIR variable and update LD_LIBRARY_PATH s.t. we can
# see the shared libraries
#-----------------------------------------------------------------------
star40='****************************************'
star20='********************'

file=$HOME/.bashrc

sed -e '/^\#\*ADC\*A\*/,/^\#\*ADC\*B\*/d' $file > tmpf$$
sed -e '/^\#\*ADC\*A\*/,/^\#\*ADC\*B\*/d' tmpf$$ >| $file
/bin/rm  tmpf$$

echo "#*ADC*A***********$star40$star20" >> $file
echo '# Following lines written by install_ADC.  '"$(date)" >> $file
echo 'export ADC_DIR='`pwd` >> $file
if [ "$isdarwin" == 'T' ]; then
    echo 'export DYLD_LIBRARY_PATH=$ADC_DIR/lib${LD_LIBRARY_PATH:+:$LD_LIBRARY_PATH}' >> $file
else
    echo 'export LD_LIBRARY_PATH=$ADC_DIR/lib${LD_LIBRARY_PATH:+:$LD_LIBRARY_PATH}' >> $file
fi
echo "#*ADC*B***********$star40$star20" >> $file

echo
echo "ADC_DIR written to $file"
echo ""
echo

#exec bash

